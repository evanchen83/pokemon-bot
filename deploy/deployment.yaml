# --- Secret: discord-secrets
apiVersion: v1
kind: Secret
metadata:
  name: discord-secrets
  labels:
    app: discord-bot
stringData:
  DISCORD_BOT_TOKEN: replace-me
  OPENAI_API_KEY: replace-me
  DB_PASSWORD: replace-me
---
# --- Deployment: discord-bot
apiVersion: apps/v1
kind: Deployment
metadata:
  name: discord-bot
  labels:
    app: discord-bot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: discord-bot
  template:
    metadata:
      labels:
        app: discord-bot
    spec:
      containers:
        - name: discord-bot
          image: us-east1-docker.pkg.dev/pokemon-bot-471420/docker/pokemon-bot:latest
          env:
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PORT
              value: "6379"
            - name: DB_HOST
              value: postgres
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: cards
            - name: DB_USER
              value: postgres
          volumeMounts:
            - name: secret-volume
              mountPath: /etc/secrets
              readOnly: true
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "1"
      volumes:
        - name: secret-volume
          secret:
            secretName: discord-secrets

---
# --- Service: postgres
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres

---
# --- StatefulSet: postgres
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: cards
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: discord-secrets
                  key: DB_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "1"
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U postgres -d cards -h 127.0.0.1
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 6
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
        storageClassName: standard-rwo
---
# --- Service: redis
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
    - port: 6379
  selector:
    app: redis

---
# --- Deployment: redis
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7
          ports:
            - containerPort: 6379
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 6

---
# --- Job: card-db-init
apiVersion: batch/v1
kind: Job
metadata:
  name: card-db-init
spec:
  backoffLimit: 2
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: card-db-init
          image: us-east1-docker.pkg.dev/pokemon-bot-471420/docker/card-db-init:latest
          command:
            - liquibase
            - --url=jdbc:postgresql://postgres:5432/cards
            - --changeLogFile=changelog.sql
            - --username=postgres
            - --password=$(DB_PASSWORD)
            - update
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: discord-secrets
                  key: DB_PASSWORD
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"